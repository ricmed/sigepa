// Script para formul√°rio de ocorr√™ncia
console.log('üöÄ Carregando script de pesquisa...');

// Vari√°veis globais para controle de pagina√ß√£o
let currentTargetField = null;
let currentPage = 1;
let currentSearch = '';
let currentType = '';

// Configurar CSRF token para AJAX
function getCookie(name) {
    let cookieValue = null;
    if (document.cookie && document.cookie !== '') {
        const cookies = document.cookie.split(';');
        for (let i = 0; i < cookies.length; i++) {
            const cookie = cookies[i].trim();
            if (cookie.substring(0, name.length + 1) === (name + '=')) {
                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                break;
            }
        }
    }
    return cookieValue;
}

const csrftoken = getCookie('csrftoken');

// Configurar AJAX padr√£o
$.ajaxSetup({
    beforeSend: function(xhr, settings) {
        if (!(/^http:.*/.test(settings.url) || /^https:.*/.test(settings.url))) {
            xhr.setRequestHeader("X-CSRFToken", csrftoken);
        }
    }
});

// Fun√ß√£o para abrir modal de pesquisa
function openSearchModal(type, targetField) {
    console.log('üìÇ Abrindo modal de pesquisa:', type, 'para campo:', targetField);
    currentTargetField = targetField;
    currentType = type;
    currentPage = 1;
    currentSearch = '';
    
    // Limpar campo de pesquisa
    $('#search' + capitalizeFirst(type)).val('');
    
    // Abrir modal apropriado
    $('#modal' + capitalizeFirst(type)).modal('show');
    
    // Carregar primeira p√°gina sem filtro (mostrar todos os primeiros itens)
    loadSearchResults(type, 1, '');
    
    // Focar no campo de pesquisa ap√≥s abrir o modal
    setTimeout(function() {
        $('#search' + capitalizeFirst(type)).focus();
    }, 500);
}

console.log('‚úÖ Fun√ß√£o openSearchModal definida');

// Fun√ß√£o para executar pesquisa via bot√£o
function executeSearchFromButton(type) {
    const searchField = $('#search' + capitalizeFirst(type));
    const searchTerm = searchField.val();
    console.log('üîç Pesquisa via bot√£o:', type, 'termo:', searchTerm);
    
    currentSearch = searchTerm;
    currentPage = 1;
    loadSearchResults(type, 1, searchTerm);
}

// Fun√ß√£o para limpar pesquisa
function clearSearch(type) {
    console.log('üßπ Limpando pesquisa:', type);
    const searchField = $('#search' + capitalizeFirst(type));
    searchField.val('');
    
    currentSearch = '';
    currentPage = 1;
    loadSearchResults(type, 1, '');
    
    // Focar novamente no campo
    searchField.focus();
}
    
// Fun√ß√£o para capitalizar primeira letra
function capitalizeFirst(str) {
    if (str === 'estabelecimentos') return 'Estabelecimentos';
    if (str === 'cbo') return 'Cbo';
    if (str === 'cid') return 'Cid';
    return str;
}
    
// Fun√ß√£o para carregar resultados de pesquisa
function loadSearchResults(type, page, search) {
    console.log('üîç Carregando resultados:', type, 'p√°gina:', page, 'busca:', search);
    const loading = $('#loading' + capitalizeFirst(type));
    const results = $('#results' + capitalizeFirst(type));
    const pagination = $('#pagination' + capitalizeFirst(type));
    
    // Mostrar loading
    loading.removeClass('d-none');
    results.empty();
    pagination.empty();
    
    // Fazer requisi√ß√£o
    $.ajax({
        url: '/core/api/' + type + '/',
        data: {
            q: search || '',
            page: page || 1
        },
        success: function(data) {
            console.log('‚úÖ Dados recebidos:', data);
            loading.addClass('d-none');
            renderResults(type, data.results || []);
            renderPagination(type, data.pagination || {});
        },
        error: function(xhr, status, error) {
            console.error('‚ùå Erro na busca:', error, xhr.responseText);
            loading.addClass('d-none');
            results.html('<div class="alert alert-danger">Erro ao carregar dados: ' + error + '</div>');
        }
    });
}
    
// Fun√ß√£o para renderizar resultados
function renderResults(type, results) {
    const container = $('#results' + capitalizeFirst(type));
    
    if (results.length === 0) {
        container.html('<div class="alert alert-info">Nenhum resultado encontrado.</div>');
        return;
    }
    
    let html = '<div class="list-group">';
    results.forEach(function(item) {
        html += `
            <div class="list-group-item d-flex justify-content-between align-items-center">
                <span>${item.text}</span>
                <button type="button" class="btn btn-primary btn-sm" onclick="selectItem('${item.id}', '${item.text.replace(/\'/g, "\\'")}')">
                    Selecionar
                </button>
            </div>
        `;
    });
    html += '</div>';
    
    container.html(html);
}
    
// Fun√ß√£o para renderizar pagina√ß√£o
function renderPagination(type, pagination) {
    const container = $('#pagination' + capitalizeFirst(type));
    
    if (!pagination.total_pages || pagination.total_pages <= 1) {
        return;
    }
    
    let html = '';
    
    // Bot√£o anterior
    if (pagination.current_page > 1) {
        html += `<li class="page-item">
            <a class="page-link" href="#" onclick="changePage(${pagination.current_page - 1})">Anterior</a>
        </li>`;
    }
    
    // P√°ginas
    for (let i = 1; i <= pagination.total_pages; i++) {
        if (i === pagination.current_page) {
            html += `<li class="page-item active"><span class="page-link">${i}</span></li>`;
        } else if (i === 1 || i === pagination.total_pages || Math.abs(i - pagination.current_page) <= 2) {
            html += `<li class="page-item">
                <a class="page-link" href="#" onclick="changePage(${i})">${i}</a>
            </li>`;
        } else if (i === pagination.current_page - 3 || i === pagination.current_page + 3) {
            html += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
        }
    }
    
    // Bot√£o pr√≥ximo
    if (pagination.current_page < pagination.total_pages) {
        html += `<li class="page-item">
            <a class="page-link" href="#" onclick="changePage(${pagination.current_page + 1})">Pr√≥ximo</a>
        </li>`;
    }
    
    container.html(html);
}
    
// Fun√ß√£o para mudar p√°gina
function changePage(page) {
    currentPage = page;
    loadSearchResults(currentType, page, currentSearch);
}

// Fun√ß√£o para selecionar item
function selectItem(id, text) {
    // Adicionar op√ß√£o ao select se n√£o existir
    const $select = $(currentTargetField);
    if ($select.find(`option[value="${id}"]`).length === 0) {
        $select.append(`<option value="${id}">${text}</option>`);
    }
    
    // Selecionar a op√ß√£o
    $select.val(id);
    
    // Fechar modal
    $('.modal').modal('hide');
    
    console.log('Item selecionado:', id, text);
}

// Fun√ß√£o debounce para otimizar pesquisa
function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = function() {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

// Fun√ß√£o para carregar munic√≠pios dinamicamente
function loadMunicipios(ufId, target) {
    console.log('üîÑ Carregando munic√≠pios para UF:', ufId, 'target:', target);
    
    if (!ufId || !target) {
        console.log('‚ö†Ô∏è Par√¢metros inv√°lidos - UF:', ufId, 'Target:', target);
        return;
    }
    
    var municipioSelect = $(target);
    if (municipioSelect.length === 0) {
        console.error('‚ùå Elemento target n√£o encontrado:', target);
        return;
    }
    
    // Mostrar indicador de carregamento
    municipioSelect.prop('disabled', true);
    municipioSelect.html('<option value="">Carregando...</option>');
    
    console.log('üì° Fazendo requisi√ß√£o AJAX...');
    
    $.ajax({
        url: '/core/api/municipios/',
        method: 'GET',
        data: { 'estado_id': ufId },
        dataType: 'json',
        success: function(data) {
            console.log('‚úÖ Resposta da API:', data);
            
            // Limpar select atual
            municipioSelect.empty();
            municipioSelect.append('<option value="">Selecione...</option>');
            
            // Verificar se a resposta √© v√°lida
            if (data && data.success !== false) {
                // Adicionar munic√≠pios
                if (data.municipios && data.municipios.length > 0) {
                    $.each(data.municipios, function(index, municipio) {
                        municipioSelect.append('<option value="' + municipio.id + '">' + municipio.nome + '</option>');
                    });
                    console.log('üìã Munic√≠pios adicionados:', data.municipios.length);
                } else {
                    municipioSelect.append('<option value="">Nenhum munic√≠pio encontrado</option>');
                    console.log('‚ö†Ô∏è Nenhum munic√≠pio encontrado');
                }
            } else {
                municipioSelect.append('<option value="">Erro na resposta</option>');
                console.log('‚ùå Resposta inv√°lida da API');
            }
            
            // Reabilitar o select
            municipioSelect.prop('disabled', false);
        },
        error: function(xhr, status, error) {
            console.error('‚ùå Erro na requisi√ß√£o:', error);
            console.error('Status:', status);
            console.error('Response:', xhr.responseText);
            
            municipioSelect.empty();
            municipioSelect.append('<option value="">Erro ao carregar</option>');
            municipioSelect.prop('disabled', false);
        }
    });
}

// Inicializa√ß√£o quando o documento estiver pronto
$(document).ready(function() {
    console.log('Inicializando formul√°rio com modais de pesquisa...');
    
    // Verificar se os elementos UF e Munic√≠pio existem
    console.log('üîç Verificando elementos UF e Munic√≠pio no document.ready:');
    console.log('   - UF Notifica√ß√£o:', $('#id_uf_notificacao').length ? 'Existe' : 'N√£o Existe');
    console.log('   - Munic√≠pio Notifica√ß√£o:', $('#id_municipio_notificacao').length ? 'Existe' : 'N√£o Existe');
    console.log('   - UF Resid√™ncia:', $('#id_uf_residencia').length ? 'Existe' : 'N√£o Existe');
    console.log('   - Munic√≠pio Resid√™ncia:', $('#id_municipio_residencia').length ? 'Existe' : 'N√£o Existe');
    console.log('   - UF Transfer√™ncia:', $('#id_uf_transferencia').length ? 'Existe' : 'N√£o Existe');
    console.log('   - Munic√≠pio Transfer√™ncia:', $('#id_municipio_transferencia').length ? 'Existe' : 'N√£o Existe');

    // Gatilho para carregar munic√≠pios ao mudar o estado
    $('#id_uf_notificacao').on('change', function() {
        var ufId = $(this).val();
        console.log('üîÑ UF Notifica√ß√£o mudou para:', ufId);
        
        // Limpar munic√≠pio atual
        $('#id_municipio_notificacao').val('');
        
        if (ufId) {
            loadMunicipios(ufId, '#id_municipio_notificacao');
        } else {
            $('#id_municipio_notificacao').empty().append('<option value="">Selecione...</option>');
        }
    });
    
    $('#id_uf_residencia').on('change', function() {
        var ufId = $(this).val();
        console.log('üîÑ UF Resid√™ncia mudou para:', ufId);
        
        // Limpar munic√≠pio atual
        $('#id_municipio_residencia').val('');
        
        if (ufId) {
            loadMunicipios(ufId, '#id_municipio_residencia');
        } else {
            $('#id_municipio_residencia').empty().append('<option value="">Selecione...</option>');
        }
    });
    
    $('#id_uf_transferencia').on('change', function() {
        var ufId = $(this).val();
        console.log('üîÑ UF Transfer√™ncia mudou para:', ufId);
        
        // Limpar munic√≠pio atual
        $('#id_municipio_transferencia').val('');
        
        if (ufId) {
            loadMunicipios(ufId, '#id_municipio_transferencia');
        } else {
            $('#id_municipio_transferencia').empty().append('<option value="">Selecione...</option>');
        }
    });

    // Carregar munic√≠pios iniciais se j√° houver UF selecionada
    console.log('üîç Verificando UFs j√° selecionadas para carregamento inicial...');
    if ($('#id_uf_notificacao').val()) {
        console.log('üìç Carregando munic√≠pios iniciais para notifica√ß√£o');
        loadMunicipios($('#id_uf_notificacao').val(), '#id_municipio_notificacao');
    }
    if ($('#id_uf_residencia').val()) {
        console.log('üìç Carregando munic√≠pios iniciais para resid√™ncia');
        loadMunicipios($('#id_uf_residencia').val(), '#id_municipio_residencia');
    }
    if ($('#id_uf_transferencia').val()) {
        console.log('üìç Carregando munic√≠pios iniciais para transfer√™ncia');
        loadMunicipios($('#id_uf_transferencia').val(), '#id_municipio_transferencia');
    }
});
